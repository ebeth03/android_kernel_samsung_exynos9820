name: Build (CI)
run-name: 'CI: Build ${{ github.event.inputs.version }} from ${{ github.sha }}'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Kernel Version'
        required: true
        default: 'v'
      devices:
        description: 'Devices'
        required: true
        default: '["beyond0lte", "beyond1lte", "beyond2lte", "beyondx", "d1", "d1x", "d2s", "d2x"]'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        device: ${{ fromJSON(github.event.inputs.devices) }}

    steps:
      - name: Checkout Tree
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Build Environment
        run: |
          sudo apt update && sudo apt upgrade -y && sudo apt install gcc-aarch64-linux-gnu -y
          
      - name: Set Environment Variable
        run: |
          echo "BUILD_DATE=$(date +"%d-%m-%Y")" >> $GITHUB_ENV
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "BUILD_KERNEL_VERSION=CI-${{ github.event.inputs.version }}-$calculatedSha" >> $GITHUB_ENV
          
      - name: Building Kernel
        run: |
            bash build-ci.sh -m ${{ matrix.device }} -k y -v ${{ env.BUILD_KERNEL_VERSION }}
      - name: Check Kernel File
        run: |
          if [ -z "$(find build/out/${{ matrix.device }} -name 'boot.img' -type f 2>/dev/null)" ]; then
             echo "No kernel files found. Cancel the workflow."
             exit 1
          fi
      - name: Upload Kernel
        uses: actions/upload-artifact@v4
        with:
          name: "oItsMineZKernel-${{ env.BUILD_KERNEL_VERSION }}-${{ matrix.device }}-${{ env.BUILD_DATE }}"
          path: |
            build/out/${{ matrix.device }}/zip/*