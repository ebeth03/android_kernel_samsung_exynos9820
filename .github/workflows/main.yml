name: Build (Release)
run-name: 'Release: Build ${{ github.event.inputs.version }} from ${{ github.sha }}'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Kernel Version'
        required: true
        default: 'v'
      tag:
        description: 'Release Tag'
        required: true
        default: 'v'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        device: [beyond0lte, beyond1lte, beyond2lte, beyondx, d1, d1x, d2s, d2x]

    steps:
      - name: Checkout Tree
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Build Environment
        run: |
          sudo apt update && sudo apt upgrade -y && sudo apt install gcc-aarch64-linux-gnu -y
          
      - name: Set Environment Variable
        run: |
          echo "BUILD_DATE=$(date +"%d-%m-%Y")" >> $GITHUB_ENV
          echo "BUILD_KERNEL_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHA=$calculatedSha" >> $GITHUB_ENV
          
      - name: Building Kernel
        run: |
            bash build.sh -m ${{ matrix.device }} -k y -v ${{ env.BUILD_KERNEL_VERSION }}

      - name: Check Kernel Zip File
        run: |
          if [ -z "$(find build/export -name '*.zip' -type f 2>/dev/null)" ]; then
             echo "No zip files found. Cancel the workflow."
             exit 1
          fi

      - name: Upload Kernel
        uses: actions/upload-artifact@v4
        with:
          name: "oItsMineZKernel-${{ env.BUILD_KERNEL_VERSION }}-${{ env.COMMIT_SHA }}-${{ matrix.device }}"
          path: |
            build/export/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Release Build Kernel
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.tag }}
          name: "${{ github.event.inputs.tag }}"
          draft: true
          generateReleaseNotes: true
          makeLatest: true
          skipIfReleaseExists: true
          token: ${{ secrets.TOKEN }}          
          artifacts: "artifacts/**/*.zip"
            
